@model IEnumerable<AgroMarket.Models.Entities.Product>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Product Listing</title>
   <style>
        body {
            background-color: #f8f9fa;
        }

        .product-container {
            margin-top: 30px;
        }

        .product-card {
            border: none;
            transition: transform 0.3s;
            margin-bottom: 20px;
        }

            .product-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 4px 15px rgba(0,0,0,0.1);
            }

        .product-image {
            height: 200px;
            object-fit: cover;
        }

        .card-body {
            padding: 1.25rem;
        }

        .product-title {
            font-size: 1.1rem;
            font-weight: bold;
            margin-bottom: 0.5rem;
        }

        .product-category {
            font-size: 0.9rem;
            color: #6c757d;
        }

        .product-price {
            font-size: 1.2rem;
            font-weight: bold;
            color: #28a745;
        }

        .product-stock {
            font-size: 0.9rem;
            color: #6c757d;
        }

        .product-rating {
            font-size: 0.9rem;
            color: #ffc107;
        }

        .action-buttons {
            position: absolute;
            top: 10px;
            right: 10px;
            display: flex;
            gap: 5px;
        }

            .action-buttons .btn {
                padding: 0.25rem 0.5rem;
                font-size: 0.875rem;
            }

        .search-sort-container {
            background-color: #ffffff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            margin-bottom: 30px;
        }

        .sort-options {
            display: flex;
            align-items: center;
            margin-top: 15px;
        }

        .sort-label {
            margin-right: 15px;
            font-weight: bold;
        }

        .sort-item {
            margin-right: 15px;
            cursor: pointer;
        }

            .sort-item a {
                text-decoration: none;
                color: #495057;
                transition: color 0.3s;
            }

            .sort-item.active a {
                font-weight: bold;
                color: #007bff;
            }

            .sort-item:hover a {
                color: #0056b3;
            }

        .modal-header {
            background-color: #f8f9fa;
            border-bottom: 1px solid #dee2e6;
        }

        .modal-footer {
            background-color: #f8f9fa;
            border-top: 1px solid #dee2e6;
        }

        .form-group {
            margin-bottom: 1rem;
        }

        .btn-icon {
            display: inline-flex;
            align-items: center;
        }

            .btn-icon i {
                margin-right: 0.5rem;
            }

        #modalProductImage {
            max-height: 300px;
            object-fit: contain;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1 class="my-4">Products</h1>
        @if (TempData["ProductSuccess"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                @TempData["ProductSuccess"]
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        }
        @if (TempData["DeleteSuccess"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                @TempData["DeleteSuccess"]
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        }
        <script>
            document.addEventListener("DOMContentLoaded", function () {
                // Select the alert element
                var alert = document.querySelector('.alert');

                if (alert) {
                    // Set a timeout to remove the alert after 4 seconds (4000ms)
                    setTimeout(function () {
                        // Use Bootstrap's built-in alert 'close' functionality
                        var closeButton = alert.querySelector('.close');
                        if (closeButton) {
                            closeButton.click();  // Simulate clicking the close button
                        }
                    }, 4000);  // 4 seconds delay
                }
            });
            </script>
        <div class="search-sort-container">
            <form id="search-form">
                <div class="input-group">
                    <input type="text" id="search-input" name="searchString" value="@ViewData["CurrentFilter"]" class="form-control" placeholder="Search by Product Name or Category Name" />
                    <button type="button" class="btn btn-outline-secondary" onclick="submitSearch()"><i class="fas fa-search"></i> Search</button>
                </div>
            </form>

            <div class="sort-options">
                <span class="sort-label">Sort By:</span>
                <div class="sort-item @(ViewData["SortOrder"]?.ToString() == "price_asc" ? "active" : "")">
                    <a href="javascript:void(0);" onclick="submitSort('price_asc')">Price: Low to High</a>
                </div>
                <div class="sort-item @(ViewData["SortOrder"]?.ToString() == "price_desc" ? "active" : "")">
                    <a href="javascript:void(0);" onclick="submitSort('price_desc')">Price: High to Low</a>
                </div>
                <div class="sort-item @(ViewData["SortOrder"]?.ToString() == "newest" ? "active" : "")">
                    <a href="javascript:void(0);" onclick="submitSort('newest')">Newest First</a>
                </div>
            </div>
        </div>
        <script>
            function submitSearch() {
                const searchString = document.getElementById('search-input').value;
                const sortOrder = '@ViewData["SortOrder"]';
                fetchProducts(searchString, sortOrder);
            }

            function submitSort(sortOrder) {
                const searchString = document.getElementById('search-input').value;
                fetchProducts(searchString, sortOrder);
            }

            function fetchProducts(searchString, sortOrder) {
                $.ajax({
                    url: '@Url.Action("Index", "Product")',
                    method: 'GET',
                    data: {
                        searchString: searchString,
                        sortOrder: sortOrder
                    },
                    success: function (data) {
                        $('#product-list').html($(data).find('#product-list').html()); // Update only the product list part
                    },
                    error: function () {
                        alert('Error fetching products.');
                    }
                });
            }
        </script>




        <div class="row product-container" id="product-list">
                @foreach (var item in Model)
                {
                    <div class="col-md-4 col-sm-6 mb-4">
                        <div class="card product-card">
                            <img src="@(string.IsNullOrEmpty(item.ImageUrl) ? "/images/default-product.jpg" : item.ImageUrl)" class="card-img-top product-image" alt="@item.ProductName">
                            <div class="card-body">
                                <h5 class="product-title">@item.ProductName</h5>
                                <p class="product-category">
                                    @if (item.ProductCategory != null && item.ProductCategory.Any())
                                    {
                                        @string.Join(", ", item.ProductCategory.Select(c => c.Category.CategoryName))
                                    }
                                </p>
                                <p class="product-price">$@item.Price.ToString("F2")</p>
                                <p class="product-stock">Stock: @item.StockQuantity</p>
                                <p class="product-rating">
                                    @{
                                        var averageRating = ViewBag.ProductRatings.ContainsKey(item.ProductID)
                                        ? ViewBag.ProductRatings[item.ProductID]
                                        : 0;
                                    }
                                    @if (averageRating > 0)
                                    {
                                        <i class="fas fa-star"></i> @averageRating.ToString("F1")
                                    }
                                    else
                                    {
                                        <span>No ratings yet</span>
                                    }
                                </p>
                            </div>
                            <div class="action-buttons">
                                <button class="btn btn-sm btn-info" onclick="loadProductDetails('@item.ProductID', this)" data-toggle="modal" data-target="#productDetailsModal">
                                    <i class="fas fa-eye"></i>
                                </button>
                                <button class="btn btn-sm btn-warning" onclick="setEditProduct({
                            ProductID: '@item.ProductID',
                            ProductName: '@item.ProductName',
                            Description: '@item.Description',
                            Price: @item.Price,
                            StockQuantity: @item.StockQuantity,
                            CategoryName: '@item.ProductCategory.FirstOrDefault()?.Category.CategoryName'
                        })" data-toggle="modal" data-target="#editProductModal">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <button class="btn btn-sm btn-danger" onclick="setDeleteProduct('@item.ProductName', '@item.ProductID')" data-toggle="modal" data-target="#deleteConfirmationModal">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                }
        </div>
    </div>

    <!-- Modals (Product Details, Edit Product, Delete Confirmation) go here -->
    <!-- Modal for Product Details -->
    <div class="modal fade" id="productDetailsModal" tabindex="-1" role="dialog" aria-labelledby="productDetailsModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="productDetailsModalLabel">Product Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="window.location.href='/Product/Index';"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-6">
                            <img id="modalProductImage" src="/api/placeholder/400/300" alt="Product Image" class="img-fluid mb-3" />
                        </div>
                        <div class="col-md-6">
                            <h4 id="modalProductName" class="mb-3"></h4>
                            <p id="modalProductDescription" class="mb-3"></p>
                            <p><strong>Category:</strong> <span id="modalProductCategory" class="badge bg-info"></span></p>
                            <p><strong>Price:</strong> <span id="modalProductPrice" class="text-success fw-bold"></span></p>
                            <p><strong>Stock:</strong> <span id="modalProductStock" class="badge bg-secondary"></span></p>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" onclick="window.location.href='/Product/Index';">Cancel</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal for Delete Confirmation -->
    <div class="modal fade" id="deleteConfirmationModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete <strong><span id="deleteProductName"></span></strong>?</p>

                    <p class="text-danger"><i class="fas fa-exclamation-triangle"></i> This action cannot be undone.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger btn-icon" id="confirmDeleteButton">
                        <i class="fas fa-trash-alt"></i> Delete
                    </button>
                </div>
            </div>
        </div>
    </div>


    <!-- Modal for Edit Product -->
    <div class="modal fade" id="editProductModal" tabindex="-1" role="dialog" aria-labelledby="editProductModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editProductModalLabel">Edit Product</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="editProductForm" enctype="multipart/form-data">
                        <input type="hidden" id="editProductId" />

                        <div class="form-group">
                            <label for="editProductName">Product Name</label>
                            <input type="text" class="form-control" id="editProductName" required />
                        </div>

                        <div class="form-group">
                            <label for="editDescription">Description</label>
                            <textarea class="form-control" id="editDescription"></textarea>
                        </div>

                        <div class="form-group">
                            <label for="editPrice">Price</label>
                            <input type="number" class="form-control" id="editPrice" required />
                        </div>

                        <div class="form-group">
                            <label for="editStockQuantity">Stock Quantity</label>
                            <input type="number" class="form-control" id="editStockQuantity" required />
                        </div>

                        <div class="form-group">
                            <label for="editCategory">Category</label>
                            @* <input type="text" class="form-control" id="editCategoryName" required /> *@
                            <select class="form-control" id="editCategoryName"></select>

                        </div>

                        <div class="form-group">
                            <label for="editImage">Upload Image</label>
                            <input type="file" class="form-control" id="editImage" accept="image" />
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" id="saveChangesButton">Save Changes</button>
                </div>
            </div>
        </div>
    </div>


    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.1.3/js/bootstrap.bundle.min.js"></script>
    <script>
        let lastOpenedButton;
        let deleteProductId = null;

        function loadProductDetails(productId, element) {
            lastOpenedButton = element;
            console.log(lastOpenedButton);
            $.ajax({
                url: '/Product/Details/' + productId,
                type: 'GET',
                success: function (data) {
                    $('#modalProductName').text(data.productName);
                    $('#modalProductDescription').text(data.description);
                    $('#modalProductCategory').text(data.categoryName);
                    $('#modalProductPrice').text('$' + data.price.toFixed(2));
                    $('#modalProductStock').text(data.stockQuantity);
                    $('#modalProductImage').attr('src', data.imageUrl || '/api/placeholder/400/300');

                    var modal = new bootstrap.Modal(document.getElementById('productDetailsModal'));
                    modal.show();
                },
                error: function () {
                    alert('Error loading product details');
                }
            });
        }
        // Event listener to handle modal close event
        $('#productDetailsModal').on('hidden.bs.modal', function () {
            // Remove the backdrop
            $('.modal-backdrop').remove(); // Remove backdrop manually
            $('body').removeClass('modal-open'); // Ensure body does not have 'modal-open' class
            if (lastOpenedButton) {
                lastOpenedButton.focus(); // Set focus back to the last opened button
                lastOpenedButton = null; // Clear the reference
            }
            onclick = "window.location.href='/Product/Index';"
        });


        // event listener to handle modal close event
        $('#productdetailsmodal').on('hidden.bs.modal', function () {

            if (lastopenedbutton) {
                lastopenedbutton.focus(); // set focus back to the last opened button
                lastopenedbutton = null; // clear the reference
            }
        });

        function setDeleteProduct(productName, productId) {
            $('#deleteProductName').text(productName);
            deleteProductId = productId;
        }

        $('#confirmDeleteButton').on('click', function () {
            $.ajax({
                url: '/Product/Delete/' + deleteProductId,
                type: 'DELETE',
                
                error: function () {
                    alert('Error deleting product.');
                },
                complete: function () {
                    location.reload();
                }
            });
        });


    </script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>


</body>
</html>